# Makefile.in generated by automake 1.11 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (C) 2007-2012  CEA/DEN, EDF R&D, OPEN CASCADE
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
# See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
#

# Copyright (C) 2007-2012  CEA/DEN, EDF R&D, OPEN CASCADE
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
# See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
#

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/adm_local/unix/make_common_starter.am
@MED_ENABLE_KERNEL_TRUE@am__append_1 = ${KERNEL_LDFLAGS} -lSALOMELocalTrace -lSALOMEBasics
bin_PROGRAMS = ensight2med$(EXEEXT) med2ensight$(EXEEXT) \
	convertToPoly$(EXEEXT) dumpInterpolation$(EXEEXT) \
	med2vtk$(EXEEXT) duplicateMED$(EXEEXT) medmembin_test$(EXEEXT) \
	duplicateMEDMESH$(EXEEXT) test_write_groups_poly$(EXEEXT) \
	test_MEDMEM_ModulusArray$(EXEEXT) test_MEDMEM_Array$(EXEEXT) \
	test_MEDMEM_SkyLineArray$(EXEEXT) \
	test_MEDMEM_CellModel$(EXEEXT) testUPointerOf$(EXEEXT) \
	testUCoordinate$(EXEEXT) testUUnit$(EXEEXT) \
	testUGeoNameMeshEntities$(EXEEXT) testUMedException$(EXEEXT) \
	testUModulusArray$(EXEEXT) testUSkyLineArray$(EXEEXT) \
	testUArray$(EXEEXT) testUCellModel$(EXEEXT) \
	readEntete$(EXEEXT) readCoordinate$(EXEEXT) \
	test_copie_field_$(EXEEXT) test_copie_fieldT$(EXEEXT) \
	test_copie_coordinate$(EXEEXT) test_copie_medarray$(EXEEXT) \
	test_copie_connectivity$(EXEEXT) test_copie_support$(EXEEXT) \
	test_copie_family$(EXEEXT) test_copie_group$(EXEEXT) \
	test_copie_mesh$(EXEEXT) test_affect_medarray$(EXEEXT) \
	test_MEDMEM_Meshing$(EXEEXT) test_MEDMEM_MeshingPoly$(EXEEXT) \
	test_operation_fielddouble$(EXEEXT) \
	test_operation_fieldint$(EXEEXT) test_gibi_driver$(EXEEXT) \
	test_porflow_driver$(EXEEXT) test_grid$(EXEEXT) \
	test_MEDMEM_PolyDriverMedMeshRead$(EXEEXT) \
	test_MEDMEM_PolyDriverMedMeshWrite$(EXEEXT) \
	test_MEDMEM_poly3D$(EXEEXT) test_MEDMEM_nArray$(EXEEXT) \
	test_MEDMEM_Meshing_poly$(EXEEXT) \
	test_profil_MedFieldDriver$(EXEEXT) \
	test_profil_gauss_MedFieldDriver$(EXEEXT) \
	test_GaussLocalization$(EXEEXT) testAnalFile$(EXEEXT) \
	test_MEDMEM_MeshingFlica$(EXEEXT) testConvertPolygon$(EXEEXT) \
	create_mesh$(EXEEXT) create_mesh_c2q4s2$(EXEEXT) \
	create_mesh_c3h8q4$(EXEEXT) create_mesh_c3h8q4_wrong$(EXEEXT) \
	create_mesh_c2q4s2_wrong$(EXEEXT) create_grid$(EXEEXT) \
	create_mesh_c2q4$(EXEEXT) create_mesh_c3h8$(EXEEXT) \
	create_poly3D$(EXEEXT)
XFAIL_TESTS = dumpInterpolation$(EXEEXT) convertToPoly$(EXEEXT) \
	duplicateMED$(EXEEXT) duplicateMEDMESH$(EXEEXT) \
	ensight2med$(EXEEXT) med2ensight$(EXEEXT) med2vtk$(EXEEXT) \
	medmembin_test$(EXEEXT) readCoordinate$(EXEEXT) \
	readEntete$(EXEEXT) testAnalFile$(EXEEXT) \
	test_MEDMEM_PolyDriverMedMeshRead$(EXEEXT) \
	test_MEDMEM_PolyDriverMedMeshWrite$(EXEEXT) \
	test_MEDMEM_poly3D$(EXEEXT) test_copie_connectivity$(EXEEXT) \
	test_copie_family$(EXEEXT) test_copie_fieldT$(EXEEXT) \
	test_copie_field_$(EXEEXT) test_copie_group$(EXEEXT) \
	test_copie_mesh$(EXEEXT) test_copie_support$(EXEEXT) \
	test_gibi_driver$(EXEEXT) test_grid$(EXEEXT) \
	test_operation_fielddouble$(EXEEXT) \
	test_operation_fieldint$(EXEEXT) test_porflow_driver$(EXEEXT) \
	test_profil_MedFieldDriver$(EXEEXT) \
	test_profil_gauss_MedFieldDriver$(EXEEXT)
subdir = src/MEDMEMBinTest
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/adm_local/unix/config_files/ac_check_sizeof_fortran.m4 \
	$(top_srcdir)/adm_local/unix/config_files/check_GUI.m4 \
	$(top_srcdir)/adm_local/unix/config_files/check_bft.m4 \
	$(top_srcdir)/adm_local/unix/config_files/check_fvm.m4 \
	$(top_srcdir)/adm_local/unix/config_files/check_med3.m4 \
	$(top_srcdir)/adm_local/unix/config_files/check_metis.m4 \
	$(top_srcdir)/adm_local/unix/config_files/check_parmetis.m4 \
	$(top_srcdir)/adm_local/unix/config_files/check_scotch.m4 \
	$(top_srcdir)/adm_local/unix/config_files/med_check_sizeof_medint.m4 \
	$(top_srcdir)/adm_local/unix/config_files/renumber.m4 \
	$(top_srcdir)/adm_local/unix/config_files/splitter.m4 \
	$(top_srcdir)/adm_local/unix/config_files/with_Kernel.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
dist_convertToPoly_OBJECTS = convertToPoly.$(OBJEXT)
convertToPoly_OBJECTS = $(dist_convertToPoly_OBJECTS)
convertToPoly_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
@MED_ENABLE_KERNEL_TRUE@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
convertToPoly_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
create_grid_SOURCES = create_grid.c
create_grid_OBJECTS = create_grid.$(OBJEXT)
create_grid_LDADD = $(LDADD)
create_grid_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) ../MEDMEM/libmedmem.la \
	../INTERP_KERNEL/libinterpkernel.la $(am__DEPENDENCIES_2)
create_mesh_SOURCES = create_mesh.c
create_mesh_OBJECTS = create_mesh.$(OBJEXT)
create_mesh_LDADD = $(LDADD)
create_mesh_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) ../MEDMEM/libmedmem.la \
	../INTERP_KERNEL/libinterpkernel.la $(am__DEPENDENCIES_2)
create_mesh_c2q4_SOURCES = create_mesh_c2q4.c
create_mesh_c2q4_OBJECTS = create_mesh_c2q4.$(OBJEXT)
create_mesh_c2q4_LDADD = $(LDADD)
create_mesh_c2q4_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
create_mesh_c2q4s2_SOURCES = create_mesh_c2q4s2.c
create_mesh_c2q4s2_OBJECTS = create_mesh_c2q4s2.$(OBJEXT)
create_mesh_c2q4s2_LDADD = $(LDADD)
create_mesh_c2q4s2_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
create_mesh_c2q4s2_wrong_SOURCES = create_mesh_c2q4s2_wrong.c
create_mesh_c2q4s2_wrong_OBJECTS = create_mesh_c2q4s2_wrong.$(OBJEXT)
create_mesh_c2q4s2_wrong_LDADD = $(LDADD)
create_mesh_c2q4s2_wrong_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
create_mesh_c3h8_SOURCES = create_mesh_c3h8.c
create_mesh_c3h8_OBJECTS = create_mesh_c3h8.$(OBJEXT)
create_mesh_c3h8_LDADD = $(LDADD)
create_mesh_c3h8_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
create_mesh_c3h8q4_SOURCES = create_mesh_c3h8q4.c
create_mesh_c3h8q4_OBJECTS = create_mesh_c3h8q4.$(OBJEXT)
create_mesh_c3h8q4_LDADD = $(LDADD)
create_mesh_c3h8q4_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
create_mesh_c3h8q4_wrong_SOURCES = create_mesh_c3h8q4_wrong.c
create_mesh_c3h8q4_wrong_OBJECTS = create_mesh_c3h8q4_wrong.$(OBJEXT)
create_mesh_c3h8q4_wrong_LDADD = $(LDADD)
create_mesh_c3h8q4_wrong_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
create_poly3D_SOURCES = create_poly3D.c
create_poly3D_OBJECTS = create_poly3D.$(OBJEXT)
create_poly3D_LDADD = $(LDADD)
create_poly3D_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_dumpInterpolation_OBJECTS = dumpInterpolation.$(OBJEXT)
dumpInterpolation_OBJECTS = $(dist_dumpInterpolation_OBJECTS)
dumpInterpolation_LDADD = $(LDADD)
dumpInterpolation_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_duplicateMED_OBJECTS = duplicateMED.$(OBJEXT)
duplicateMED_OBJECTS = $(dist_duplicateMED_OBJECTS)
duplicateMED_LDADD = $(LDADD)
duplicateMED_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_duplicateMEDMESH_OBJECTS = duplicateMEDMESH.$(OBJEXT)
duplicateMEDMESH_OBJECTS = $(dist_duplicateMEDMESH_OBJECTS)
duplicateMEDMESH_LDADD = $(LDADD)
duplicateMEDMESH_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_ensight2med_OBJECTS = ensight2med.$(OBJEXT)
ensight2med_OBJECTS = $(dist_ensight2med_OBJECTS)
ensight2med_LDADD = $(LDADD)
ensight2med_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) ../MEDMEM/libmedmem.la \
	../INTERP_KERNEL/libinterpkernel.la $(am__DEPENDENCIES_2)
dist_med2ensight_OBJECTS = med2ensight.$(OBJEXT)
med2ensight_OBJECTS = $(dist_med2ensight_OBJECTS)
med2ensight_LDADD = $(LDADD)
med2ensight_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) ../MEDMEM/libmedmem.la \
	../INTERP_KERNEL/libinterpkernel.la $(am__DEPENDENCIES_2)
dist_med2vtk_OBJECTS = med2vtk.$(OBJEXT)
med2vtk_OBJECTS = $(dist_med2vtk_OBJECTS)
med2vtk_LDADD = $(LDADD)
med2vtk_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) ../MEDMEM/libmedmem.la \
	../INTERP_KERNEL/libinterpkernel.la $(am__DEPENDENCIES_2)
dist_medmembin_test_OBJECTS = med_test.$(OBJEXT)
medmembin_test_OBJECTS = $(dist_medmembin_test_OBJECTS)
medmembin_test_LDADD = $(LDADD)
medmembin_test_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_readCoordinate_OBJECTS = readCoordinate.$(OBJEXT)
readCoordinate_OBJECTS = $(dist_readCoordinate_OBJECTS)
readCoordinate_LDADD = $(LDADD)
readCoordinate_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_readEntete_OBJECTS = readEntete.$(OBJEXT)
readEntete_OBJECTS = $(dist_readEntete_OBJECTS)
readEntete_LDADD = $(LDADD)
readEntete_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) ../MEDMEM/libmedmem.la \
	../INTERP_KERNEL/libinterpkernel.la $(am__DEPENDENCIES_2)
dist_testAnalFile_OBJECTS = testAnalFile.$(OBJEXT)
testAnalFile_OBJECTS = $(dist_testAnalFile_OBJECTS)
testAnalFile_LDADD = $(LDADD)
testAnalFile_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_testConvertPolygon_OBJECTS = testConvertPolygon.$(OBJEXT)
testConvertPolygon_OBJECTS = $(dist_testConvertPolygon_OBJECTS)
testConvertPolygon_LDADD = $(LDADD)
testConvertPolygon_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_testUArray_OBJECTS = testUArray.$(OBJEXT)
testUArray_OBJECTS = $(dist_testUArray_OBJECTS)
testUArray_LDADD = $(LDADD)
testUArray_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) ../MEDMEM/libmedmem.la \
	../INTERP_KERNEL/libinterpkernel.la $(am__DEPENDENCIES_2)
dist_testUCellModel_OBJECTS = testUCellModel.$(OBJEXT)
testUCellModel_OBJECTS = $(dist_testUCellModel_OBJECTS)
testUCellModel_LDADD = $(LDADD)
testUCellModel_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_testUCoordinate_OBJECTS = testUCoordinate.$(OBJEXT)
testUCoordinate_OBJECTS = $(dist_testUCoordinate_OBJECTS)
testUCoordinate_LDADD = $(LDADD)
testUCoordinate_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_testUGeoNameMeshEntities_OBJECTS =  \
	testUGeoNameMeshEntities.$(OBJEXT)
testUGeoNameMeshEntities_OBJECTS =  \
	$(dist_testUGeoNameMeshEntities_OBJECTS)
testUGeoNameMeshEntities_LDADD = $(LDADD)
testUGeoNameMeshEntities_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_testUMedException_OBJECTS = testUMedException.$(OBJEXT)
testUMedException_OBJECTS = $(dist_testUMedException_OBJECTS)
testUMedException_LDADD = $(LDADD)
testUMedException_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_testUModulusArray_OBJECTS = testUModulusArray.$(OBJEXT)
testUModulusArray_OBJECTS = $(dist_testUModulusArray_OBJECTS)
testUModulusArray_LDADD = $(LDADD)
testUModulusArray_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_testUPointerOf_OBJECTS = testUPointerOf.$(OBJEXT)
testUPointerOf_OBJECTS = $(dist_testUPointerOf_OBJECTS)
testUPointerOf_LDADD = $(LDADD)
testUPointerOf_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_testUSkyLineArray_OBJECTS = testUSkyLineArray.$(OBJEXT)
testUSkyLineArray_OBJECTS = $(dist_testUSkyLineArray_OBJECTS)
testUSkyLineArray_LDADD = $(LDADD)
testUSkyLineArray_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_testUUnit_OBJECTS = testUUnit.$(OBJEXT)
testUUnit_OBJECTS = $(dist_testUUnit_OBJECTS)
testUUnit_LDADD = $(LDADD)
testUUnit_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) ../MEDMEM/libmedmem.la \
	../INTERP_KERNEL/libinterpkernel.la $(am__DEPENDENCIES_2)
dist_test_GaussLocalization_OBJECTS =  \
	test_GaussLocalization.$(OBJEXT)
test_GaussLocalization_OBJECTS =  \
	$(dist_test_GaussLocalization_OBJECTS)
test_GaussLocalization_LDADD = $(LDADD)
test_GaussLocalization_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_MEDMEM_Array_OBJECTS = test_MEDMEM_Array.$(OBJEXT)
test_MEDMEM_Array_OBJECTS = $(dist_test_MEDMEM_Array_OBJECTS)
test_MEDMEM_Array_LDADD = $(LDADD)
test_MEDMEM_Array_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_MEDMEM_CellModel_OBJECTS = test_MEDMEM_CellModel.$(OBJEXT)
test_MEDMEM_CellModel_OBJECTS = $(dist_test_MEDMEM_CellModel_OBJECTS)
test_MEDMEM_CellModel_LDADD = $(LDADD)
test_MEDMEM_CellModel_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_MEDMEM_Meshing_OBJECTS = test_MEDMEM_Meshing.$(OBJEXT)
test_MEDMEM_Meshing_OBJECTS = $(dist_test_MEDMEM_Meshing_OBJECTS)
test_MEDMEM_Meshing_LDADD = $(LDADD)
test_MEDMEM_Meshing_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_MEDMEM_MeshingFlica_OBJECTS =  \
	test_MEDMEM_MeshingFlica.$(OBJEXT)
test_MEDMEM_MeshingFlica_OBJECTS =  \
	$(dist_test_MEDMEM_MeshingFlica_OBJECTS)
test_MEDMEM_MeshingFlica_LDADD = $(LDADD)
test_MEDMEM_MeshingFlica_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_MEDMEM_MeshingPoly_OBJECTS =  \
	test_MEDMEM_MeshingPoly.$(OBJEXT)
test_MEDMEM_MeshingPoly_OBJECTS =  \
	$(dist_test_MEDMEM_MeshingPoly_OBJECTS)
test_MEDMEM_MeshingPoly_LDADD = $(LDADD)
test_MEDMEM_MeshingPoly_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_MEDMEM_Meshing_poly_OBJECTS =  \
	test_MEDMEM_Meshing_poly.$(OBJEXT)
test_MEDMEM_Meshing_poly_OBJECTS =  \
	$(dist_test_MEDMEM_Meshing_poly_OBJECTS)
test_MEDMEM_Meshing_poly_LDADD = $(LDADD)
test_MEDMEM_Meshing_poly_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_MEDMEM_ModulusArray_OBJECTS =  \
	test_MEDMEM_ModulusArray.$(OBJEXT)
test_MEDMEM_ModulusArray_OBJECTS =  \
	$(dist_test_MEDMEM_ModulusArray_OBJECTS)
test_MEDMEM_ModulusArray_LDADD = $(LDADD)
test_MEDMEM_ModulusArray_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_MEDMEM_PolyDriverMedMeshRead_OBJECTS =  \
	test_MEDMEM_PolyDriverMedMeshRead.$(OBJEXT)
test_MEDMEM_PolyDriverMedMeshRead_OBJECTS =  \
	$(dist_test_MEDMEM_PolyDriverMedMeshRead_OBJECTS)
test_MEDMEM_PolyDriverMedMeshRead_LDADD = $(LDADD)
test_MEDMEM_PolyDriverMedMeshRead_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) ../MEDMEM/libmedmem.la \
	../INTERP_KERNEL/libinterpkernel.la $(am__DEPENDENCIES_2)
dist_test_MEDMEM_PolyDriverMedMeshWrite_OBJECTS =  \
	test_MEDMEM_PolyDriverMedMeshWrite.$(OBJEXT)
test_MEDMEM_PolyDriverMedMeshWrite_OBJECTS =  \
	$(dist_test_MEDMEM_PolyDriverMedMeshWrite_OBJECTS)
test_MEDMEM_PolyDriverMedMeshWrite_LDADD = $(LDADD)
test_MEDMEM_PolyDriverMedMeshWrite_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) ../MEDMEM/libmedmem.la \
	../INTERP_KERNEL/libinterpkernel.la $(am__DEPENDENCIES_2)
dist_test_MEDMEM_SkyLineArray_OBJECTS =  \
	test_MEDMEM_SkyLineArray.$(OBJEXT)
test_MEDMEM_SkyLineArray_OBJECTS =  \
	$(dist_test_MEDMEM_SkyLineArray_OBJECTS)
test_MEDMEM_SkyLineArray_LDADD = $(LDADD)
test_MEDMEM_SkyLineArray_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_MEDMEM_nArray_OBJECTS = test_MEDMEM_nArray.$(OBJEXT)
test_MEDMEM_nArray_OBJECTS = $(dist_test_MEDMEM_nArray_OBJECTS)
test_MEDMEM_nArray_LDADD = $(LDADD)
test_MEDMEM_nArray_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_MEDMEM_poly3D_OBJECTS = test_MEDMEM_poly3D.$(OBJEXT)
test_MEDMEM_poly3D_OBJECTS = $(dist_test_MEDMEM_poly3D_OBJECTS)
test_MEDMEM_poly3D_LDADD = $(LDADD)
test_MEDMEM_poly3D_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_affect_medarray_OBJECTS = test_affect_medarray.$(OBJEXT)
test_affect_medarray_OBJECTS = $(dist_test_affect_medarray_OBJECTS)
test_affect_medarray_LDADD = $(LDADD)
test_affect_medarray_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_copie_connectivity_OBJECTS =  \
	test_copie_connectivity.$(OBJEXT)
test_copie_connectivity_OBJECTS =  \
	$(dist_test_copie_connectivity_OBJECTS)
test_copie_connectivity_LDADD = $(LDADD)
test_copie_connectivity_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_copie_coordinate_OBJECTS = test_copie_coordinate.$(OBJEXT)
test_copie_coordinate_OBJECTS = $(dist_test_copie_coordinate_OBJECTS)
test_copie_coordinate_LDADD = $(LDADD)
test_copie_coordinate_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_copie_family_OBJECTS = test_copie_family.$(OBJEXT)
test_copie_family_OBJECTS = $(dist_test_copie_family_OBJECTS)
test_copie_family_LDADD = $(LDADD)
test_copie_family_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_copie_fieldT_OBJECTS = test_copie_fieldT.$(OBJEXT)
test_copie_fieldT_OBJECTS = $(dist_test_copie_fieldT_OBJECTS)
test_copie_fieldT_LDADD = $(LDADD)
test_copie_fieldT_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_copie_field__OBJECTS = test_copie_field_.$(OBJEXT)
test_copie_field__OBJECTS = $(dist_test_copie_field__OBJECTS)
test_copie_field__LDADD = $(LDADD)
test_copie_field__DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_copie_group_OBJECTS = test_copie_group.$(OBJEXT)
test_copie_group_OBJECTS = $(dist_test_copie_group_OBJECTS)
test_copie_group_LDADD = $(LDADD)
test_copie_group_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_copie_medarray_OBJECTS = test_copie_medarray.$(OBJEXT)
test_copie_medarray_OBJECTS = $(dist_test_copie_medarray_OBJECTS)
test_copie_medarray_LDADD = $(LDADD)
test_copie_medarray_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_copie_mesh_OBJECTS = test_copie_mesh.$(OBJEXT)
test_copie_mesh_OBJECTS = $(dist_test_copie_mesh_OBJECTS)
test_copie_mesh_LDADD = $(LDADD)
test_copie_mesh_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_copie_support_OBJECTS = test_copie_support.$(OBJEXT)
test_copie_support_OBJECTS = $(dist_test_copie_support_OBJECTS)
test_copie_support_LDADD = $(LDADD)
test_copie_support_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_gibi_driver_OBJECTS = test_gibi_driver.$(OBJEXT)
test_gibi_driver_OBJECTS = $(dist_test_gibi_driver_OBJECTS)
test_gibi_driver_LDADD = $(LDADD)
test_gibi_driver_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_grid_OBJECTS = test_grid.$(OBJEXT)
test_grid_OBJECTS = $(dist_test_grid_OBJECTS)
test_grid_LDADD = $(LDADD)
test_grid_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) ../MEDMEM/libmedmem.la \
	../INTERP_KERNEL/libinterpkernel.la $(am__DEPENDENCIES_2)
dist_test_operation_fielddouble_OBJECTS =  \
	test_operation_fielddouble.$(OBJEXT)
test_operation_fielddouble_OBJECTS =  \
	$(dist_test_operation_fielddouble_OBJECTS)
test_operation_fielddouble_LDADD = $(LDADD)
test_operation_fielddouble_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_operation_fieldint_OBJECTS =  \
	test_operation_fieldint.$(OBJEXT)
test_operation_fieldint_OBJECTS =  \
	$(dist_test_operation_fieldint_OBJECTS)
test_operation_fieldint_LDADD = $(LDADD)
test_operation_fieldint_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_porflow_driver_OBJECTS = test_porflow_driver.$(OBJEXT)
test_porflow_driver_OBJECTS = $(dist_test_porflow_driver_OBJECTS)
test_porflow_driver_LDADD = $(LDADD)
test_porflow_driver_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_profil_MedFieldDriver_OBJECTS =  \
	test_profil_MedFieldDriver.$(OBJEXT)
test_profil_MedFieldDriver_OBJECTS =  \
	$(dist_test_profil_MedFieldDriver_OBJECTS)
test_profil_MedFieldDriver_LDADD = $(LDADD)
test_profil_MedFieldDriver_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_profil_gauss_MedFieldDriver_OBJECTS =  \
	test_profil_gauss_MedFieldDriver.$(OBJEXT)
test_profil_gauss_MedFieldDriver_OBJECTS =  \
	$(dist_test_profil_gauss_MedFieldDriver_OBJECTS)
test_profil_gauss_MedFieldDriver_LDADD = $(LDADD)
test_profil_gauss_MedFieldDriver_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
dist_test_write_groups_poly_OBJECTS =  \
	test_write_groups_poly.$(OBJEXT)
test_write_groups_poly_OBJECTS =  \
	$(dist_test_write_groups_poly_OBJECTS)
test_write_groups_poly_LDADD = $(LDADD)
test_write_groups_poly_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__DEPENDENCIES_2)
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/adm_local/unix/config_files/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(dist_convertToPoly_SOURCES) create_grid.c create_mesh.c \
	create_mesh_c2q4.c create_mesh_c2q4s2.c \
	create_mesh_c2q4s2_wrong.c create_mesh_c3h8.c \
	create_mesh_c3h8q4.c create_mesh_c3h8q4_wrong.c \
	create_poly3D.c $(dist_dumpInterpolation_SOURCES) \
	$(dist_duplicateMED_SOURCES) $(dist_duplicateMEDMESH_SOURCES) \
	$(dist_ensight2med_SOURCES) $(dist_med2ensight_SOURCES) \
	$(dist_med2vtk_SOURCES) $(dist_medmembin_test_SOURCES) \
	$(dist_readCoordinate_SOURCES) $(dist_readEntete_SOURCES) \
	$(dist_testAnalFile_SOURCES) \
	$(dist_testConvertPolygon_SOURCES) $(dist_testUArray_SOURCES) \
	$(dist_testUCellModel_SOURCES) $(dist_testUCoordinate_SOURCES) \
	$(dist_testUGeoNameMeshEntities_SOURCES) \
	$(dist_testUMedException_SOURCES) \
	$(dist_testUModulusArray_SOURCES) \
	$(dist_testUPointerOf_SOURCES) \
	$(dist_testUSkyLineArray_SOURCES) $(dist_testUUnit_SOURCES) \
	$(dist_test_GaussLocalization_SOURCES) \
	$(dist_test_MEDMEM_Array_SOURCES) \
	$(dist_test_MEDMEM_CellModel_SOURCES) \
	$(dist_test_MEDMEM_Meshing_SOURCES) \
	$(dist_test_MEDMEM_MeshingFlica_SOURCES) \
	$(dist_test_MEDMEM_MeshingPoly_SOURCES) \
	$(dist_test_MEDMEM_Meshing_poly_SOURCES) \
	$(dist_test_MEDMEM_ModulusArray_SOURCES) \
	$(dist_test_MEDMEM_PolyDriverMedMeshRead_SOURCES) \
	$(dist_test_MEDMEM_PolyDriverMedMeshWrite_SOURCES) \
	$(dist_test_MEDMEM_SkyLineArray_SOURCES) \
	$(dist_test_MEDMEM_nArray_SOURCES) \
	$(dist_test_MEDMEM_poly3D_SOURCES) \
	$(dist_test_affect_medarray_SOURCES) \
	$(dist_test_copie_connectivity_SOURCES) \
	$(dist_test_copie_coordinate_SOURCES) \
	$(dist_test_copie_family_SOURCES) \
	$(dist_test_copie_fieldT_SOURCES) \
	$(dist_test_copie_field__SOURCES) \
	$(dist_test_copie_group_SOURCES) \
	$(dist_test_copie_medarray_SOURCES) \
	$(dist_test_copie_mesh_SOURCES) \
	$(dist_test_copie_support_SOURCES) \
	$(dist_test_gibi_driver_SOURCES) $(dist_test_grid_SOURCES) \
	$(dist_test_operation_fielddouble_SOURCES) \
	$(dist_test_operation_fieldint_SOURCES) \
	$(dist_test_porflow_driver_SOURCES) \
	$(dist_test_profil_MedFieldDriver_SOURCES) \
	$(dist_test_profil_gauss_MedFieldDriver_SOURCES) \
	$(dist_test_write_groups_poly_SOURCES)
DIST_SOURCES = $(dist_convertToPoly_SOURCES) create_grid.c \
	create_mesh.c create_mesh_c2q4.c create_mesh_c2q4s2.c \
	create_mesh_c2q4s2_wrong.c create_mesh_c3h8.c \
	create_mesh_c3h8q4.c create_mesh_c3h8q4_wrong.c \
	create_poly3D.c $(dist_dumpInterpolation_SOURCES) \
	$(dist_duplicateMED_SOURCES) $(dist_duplicateMEDMESH_SOURCES) \
	$(dist_ensight2med_SOURCES) $(dist_med2ensight_SOURCES) \
	$(dist_med2vtk_SOURCES) $(dist_medmembin_test_SOURCES) \
	$(dist_readCoordinate_SOURCES) $(dist_readEntete_SOURCES) \
	$(dist_testAnalFile_SOURCES) \
	$(dist_testConvertPolygon_SOURCES) $(dist_testUArray_SOURCES) \
	$(dist_testUCellModel_SOURCES) $(dist_testUCoordinate_SOURCES) \
	$(dist_testUGeoNameMeshEntities_SOURCES) \
	$(dist_testUMedException_SOURCES) \
	$(dist_testUModulusArray_SOURCES) \
	$(dist_testUPointerOf_SOURCES) \
	$(dist_testUSkyLineArray_SOURCES) $(dist_testUUnit_SOURCES) \
	$(dist_test_GaussLocalization_SOURCES) \
	$(dist_test_MEDMEM_Array_SOURCES) \
	$(dist_test_MEDMEM_CellModel_SOURCES) \
	$(dist_test_MEDMEM_Meshing_SOURCES) \
	$(dist_test_MEDMEM_MeshingFlica_SOURCES) \
	$(dist_test_MEDMEM_MeshingPoly_SOURCES) \
	$(dist_test_MEDMEM_Meshing_poly_SOURCES) \
	$(dist_test_MEDMEM_ModulusArray_SOURCES) \
	$(dist_test_MEDMEM_PolyDriverMedMeshRead_SOURCES) \
	$(dist_test_MEDMEM_PolyDriverMedMeshWrite_SOURCES) \
	$(dist_test_MEDMEM_SkyLineArray_SOURCES) \
	$(dist_test_MEDMEM_nArray_SOURCES) \
	$(dist_test_MEDMEM_poly3D_SOURCES) \
	$(dist_test_affect_medarray_SOURCES) \
	$(dist_test_copie_connectivity_SOURCES) \
	$(dist_test_copie_coordinate_SOURCES) \
	$(dist_test_copie_family_SOURCES) \
	$(dist_test_copie_fieldT_SOURCES) \
	$(dist_test_copie_field__SOURCES) \
	$(dist_test_copie_group_SOURCES) \
	$(dist_test_copie_medarray_SOURCES) \
	$(dist_test_copie_mesh_SOURCES) \
	$(dist_test_copie_support_SOURCES) \
	$(dist_test_gibi_driver_SOURCES) $(dist_test_grid_SOURCES) \
	$(dist_test_operation_fielddouble_SOURCES) \
	$(dist_test_operation_fieldint_SOURCES) \
	$(dist_test_porflow_driver_SOURCES) \
	$(dist_test_profil_MedFieldDriver_SOURCES) \
	$(dist_test_profil_gauss_MedFieldDriver_SOURCES) \
	$(dist_test_write_groups_poly_SOURCES)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BFT_INCLUDES = @BFT_INCLUDES@
BFT_LIBS = @BFT_LIBS@
BFT_LIBSUFFIX = @BFT_LIBSUFFIX@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_LIBS = @BOOST_LIBS@
BOOST_LIBSUFFIX = @BOOST_LIBSUFFIX@
BOOST_LIB_REGEX = @BOOST_LIB_REGEX@
BOOST_LIB_SIGNALS = @BOOST_LIB_SIGNALS@
BOOST_LIB_SYSTEM = @BOOST_LIB_SYSTEM@
BOOST_LIB_THREAD = @BOOST_LIB_THREAD@
BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@
CASROOT = @CASROOT@
CAS_CPPFLAGS = @CAS_CPPFLAGS@
CAS_CXXFLAGS = @CAS_CXXFLAGS@
CAS_DATADIR = @CAS_DATADIR@
CAS_DATAEXCHANGE = @CAS_DATAEXCHANGE@
CAS_KERNEL = @CAS_KERNEL@
CAS_LDFLAGS = @CAS_LDFLAGS@
CAS_LDPATH = @CAS_LDPATH@
CAS_LIBDIR = @CAS_LIBDIR@
CAS_MATH = @CAS_MATH@
CAS_MODELER = @CAS_MODELER@
CAS_OCAF = @CAS_OCAF@
CAS_OCAFVIS = @CAS_OCAFVIS@
CAS_STDPLUGIN = @CAS_STDPLUGIN@
CAS_TKTopAlgo = @CAS_TKTopAlgo@
CAS_VIEWER = @CAS_VIEWER@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CORBA_CXXFLAGS = @CORBA_CXXFLAGS@
CORBA_INCLUDES = @CORBA_INCLUDES@
CORBA_LIBS = @CORBA_LIBS@
CORBA_ROOT = @CORBA_ROOT@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CPPUNIT_INCLUDES = @CPPUNIT_INCLUDES@
CPPUNIT_LIBS = @CPPUNIT_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXTMPDPTHFLAGS = @CXXTMPDPTHFLAGS@
CXX_DEPEND_FLAG = @CXX_DEPEND_FLAG@
CYGPATH_W = @CYGPATH_W@
C_DEPEND_FLAG = @C_DEPEND_FLAG@
DEFINED_F77INT64 = @DEFINED_F77INT64@
DEFS = @DEFS@
DEPCC = @DEPCC@
DEPCXX = @DEPCXX@
DEPCXXFLAGS = @DEPCXXFLAGS@
DEPDIR = @DEPDIR@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DOXYGEN_PYTHON_EXTENSION = @DOXYGEN_PYTHON_EXTENSION@
DOXYGEN_SUPPORT_STL = @DOXYGEN_SUPPORT_STL@
DOXYGEN_WITH_PYTHON = @DOXYGEN_WITH_PYTHON@
DOXYGEN_WITH_STL = @DOXYGEN_WITH_STL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DVIPS = @DVIPS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_FVM = @ENABLE_FVM@
ENABLE_METIS = @ENABLE_METIS@
ENABLE_PARMETIS = @ENABLE_PARMETIS@
ENABLE_RENUMBER = @ENABLE_RENUMBER@
ENABLE_SCOTCH = @ENABLE_SCOTCH@
ENABLE_SPLITTER = @ENABLE_SPLITTER@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FLIBS = @FLIBS@
FVM_INCLUDES = @FVM_INCLUDES@
FVM_LIBS = @FVM_LIBS@
FVM_LIBSUFFIX = @FVM_LIBSUFFIX@
GLOBAL_INSTALL = @GLOBAL_INSTALL@
GREP = @GREP@
GUI_CXXFLAGS = @GUI_CXXFLAGS@
GUI_LDFLAGS = @GUI_LDFLAGS@
GUI_ROOT_DIR = @GUI_ROOT_DIR@
HAVE_SSTREAM = @HAVE_SSTREAM@
HDF5HOME = @HDF5HOME@
HDF5_INCLUDES = @HDF5_INCLUDES@
HDF5_LIBS = @HDF5_LIBS@
HDF5_MT_LIBS = @HDF5_MT_LIBS@
IDL = @IDL@
IDLCXXFLAGS = @IDLCXXFLAGS@
IDLPYFLAGS = @IDLPYFLAGS@
IDL_CLN_CXX = @IDL_CLN_CXX@
IDL_CLN_H = @IDL_CLN_H@
IDL_CLN_OBJ = @IDL_CLN_OBJ@
IDL_SRV_CXX = @IDL_SRV_CXX@
IDL_SRV_H = @IDL_SRV_H@
IDL_SRV_OBJ = @IDL_SRV_OBJ@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KERNEL_CXXFLAGS = @KERNEL_CXXFLAGS@
KERNEL_LDFLAGS = @KERNEL_LDFLAGS@
KERNEL_ROOT_DIR = @KERNEL_ROOT_DIR@
KERNEL_SITE_DIR = @KERNEL_SITE_DIR@
LATEX = @LATEX@
LD = @LD@
LDEXPDYNFLAGS = @LDEXPDYNFLAGS@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBXML_INCLUDES = @LIBXML_INCLUDES@
LIBXML_LIBS = @LIBXML_LIBS@
LIB_LOCATION_SUFFIX = @LIB_LOCATION_SUFFIX@
LIPO = @LIPO@
LN_S = @LN_S@
LRELEASE = @LRELEASE@
LTLIBOBJS = @LTLIBOBJS@
MACHINE = @MACHINE@
MAKEINFO = @MAKEINFO@
MDUMP = @MDUMP@
MED3HOME = @MED3HOME@
MED3_INCLUDES = @MED3_INCLUDES@
MED3_LIBS = @MED3_LIBS@
MED3_LIBS_C_ONLY = @MED3_LIBS_C_ONLY@
MED3_MT_LIBS = @MED3_MT_LIBS@
MED_CPPFLAGS = @MED_CPPFLAGS@
MED_WITH_KERNEL = @MED_WITH_KERNEL@
METIS_CPPFLAGS = @METIS_CPPFLAGS@
METIS_LIBS = @METIS_LIBS@
METIS_LIBSUFFIX = @METIS_LIBSUFFIX@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MODULE_NAME = @MODULE_NAME@
MPI_INCLUDES = @MPI_INCLUDES@
MPI_LIBS = @MPI_LIBS@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OCC_VERSION_DEVELOPMENT = @OCC_VERSION_DEVELOPMENT@
OGL_INCLUDES = @OGL_INCLUDES@
OGL_LIBS = @OGL_LIBS@
OMNIORB_CXXFLAGS = @OMNIORB_CXXFLAGS@
OMNIORB_IDL = @OMNIORB_IDL@
OMNIORB_IDLCXXFLAGS = @OMNIORB_IDLCXXFLAGS@
OMNIORB_IDLPYFLAGS = @OMNIORB_IDLPYFLAGS@
OMNIORB_IDL_CLN_CXX = @OMNIORB_IDL_CLN_CXX@
OMNIORB_IDL_CLN_H = @OMNIORB_IDL_CLN_H@
OMNIORB_IDL_CLN_OBJ = @OMNIORB_IDL_CLN_OBJ@
OMNIORB_IDL_SRV_CXX = @OMNIORB_IDL_SRV_CXX@
OMNIORB_IDL_SRV_H = @OMNIORB_IDL_SRV_H@
OMNIORB_IDL_SRV_OBJ = @OMNIORB_IDL_SRV_OBJ@
OMNIORB_IDL_TIE_CXX = @OMNIORB_IDL_TIE_CXX@
OMNIORB_IDL_TIE_H = @OMNIORB_IDL_TIE_H@
OMNIORB_INCLUDES = @OMNIORB_INCLUDES@
OMNIORB_LIBS = @OMNIORB_LIBS@
OMNIORB_PACOIDLCXXFLAGS = @OMNIORB_PACOIDLCXXFLAGS@
OMNIORB_ROOT = @OMNIORB_ROOT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PACOIDLCXXFLAGS = @PACOIDLCXXFLAGS@
PARMETIS_CPPFLAGS = @PARMETIS_CPPFLAGS@
PARMETIS_LIBS = @PARMETIS_LIBS@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFLATEX = @PDFLATEX@
PKG_CONFIG = @PKG_CONFIG@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
PYTHON = @PYTHON@
PYTHONHOME = @PYTHONHOME@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_INCLUDES = @PYTHON_INCLUDES@
PYTHON_LIBS = @PYTHON_LIBS@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_SITE = @PYTHON_SITE@
PYTHON_SITE_EXEC = @PYTHON_SITE_EXEC@
PYTHON_SITE_INSTALL = @PYTHON_SITE_INSTALL@
PYTHON_SITE_PACKAGE = @PYTHON_SITE_PACKAGE@
PYTHON_VERSION = @PYTHON_VERSION@
QRCC = @QRCC@
QTDIR = @QTDIR@
QT_ASSISTANT_INCLUDES = @QT_ASSISTANT_INCLUDES@
QT_ASSISTANT_LIBS = @QT_ASSISTANT_LIBS@
QT_CORE_LIBS = @QT_CORE_LIBS@
QT_GUI_LIBS = @QT_GUI_LIBS@
QT_INCLUDES = @QT_INCLUDES@
QT_LIBS = @QT_LIBS@
QT_LIB_DIR = @QT_LIB_DIR@
QT_MT_INCLUDES = @QT_MT_INCLUDES@
QT_MT_LIBS = @QT_MT_LIBS@
QT_OTHER_LIBS = @QT_OTHER_LIBS@
QT_ROOT = @QT_ROOT@
QT_VERSION = @QT_VERSION@
QT_VERSION_ID = @QT_VERSION_ID@
RANLIB = @RANLIB@
ROOT_BUILDDIR = @ROOT_BUILDDIR@
ROOT_SRCDIR = @ROOT_SRCDIR@
RST2HTML = @RST2HTML@
SCOTCH_CPPFLAGS = @SCOTCH_CPPFLAGS@
SCOTCH_LIBS = @SCOTCH_LIBS@
SCOTCH_LIBSUFFIX = @SCOTCH_LIBSUFFIX@
SED = @SED@
SETX = @SETX@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SOCKETFLAGS = @SOCKETFLAGS@
SOCKETLIBS = @SOCKETLIBS@
SPHINX = @SPHINX@
STDLIB = @STDLIB@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_FLAGS = @SWIG_FLAGS@
TEMP = @TEMP@
UIC = @UIC@
VERSION = @VERSION@
VERSION_DEV = @VERSION_DEV@
VTKPY_MODULES = @VTKPY_MODULES@
VTK_INCLUDES = @VTK_INCLUDES@
VTK_LIBS = @VTK_LIBS@
WITHIHM = @WITHIHM@
WITHMPI = @WITHMPI@
XMKMF = @XMKMF@
XVERSION = @XVERSION@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
acx_pthread_config = @acx_pthread_config@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = $(prefix)/bin/salome
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
cppunit_ok = @cppunit_ok@
datadir = @datadir@
datarootdir = @datarootdir@

# Documentation directory
docdir = $(datadir)/doc/salome
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = $(prefix)/lib@LIB_LOCATION_SUFFIX@/salome
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
mpi2_ok = @mpi2_ok@
mpi_ok = @mpi_ok@
oldincludedir = @oldincludedir@
para_path = @para_path@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
@MED_ENABLE_KERNEL_FALSE@AM_CXXFLAGS = -I$(top_builddir)/adm_local_without_kernel -include SALOMEconfig.h

# ============================================================
# The following is to avoid PACKAGE_... env variable
# redefinition compilation warnings
# ============================================================
#
@MED_ENABLE_KERNEL_TRUE@AM_CXXFLAGS = @KERNEL_CXXFLAGS@ -include SALOMEconfig.h

#  MED MEDMEM : MED files in memory
#

# first '.' says that this folder must be compiled before Test (MEDMEM/Test uses MEDMEM)
#if CPPUNIT_IS_OK
# SUBDIRS=. Test
#endif

#DIST_SUBDIRS= Test

#lib_LTLIBRARIES= libMEDMEMBinTest.la

#libmedmem_la_LDFLAGS= -L$(top_builddir)/lib@LIB_LOCATION_SUFFIX@/salome 
#libMEDMEMBinTest_la_CPPFLAGS= $(MED3_INCLUDES) $(HDF5_INCLUDES) @CXXTMPDPTHFLAGS@ \
#	-I$(srcdir)/../MEDWrapper/Base \
#	-I$(srcdir)/../MEDWrapper/V2_1/Core -I$(srcdir)/../INTERPOLATION

# change motivated by the bug KERNEL4778.
#libMEDMEMBinTest_la_LDFLAGS=$(MED3_LIBS_C_ONLY) $(HDF5_LIBS) ../MEDWrapper/V2_1/Core/libmed_V2_1.la \
#	../MEDWrapper/Base/libMEDWrapperBase.la $(STDLIB)
#if MED_ENABLE_KERNEL
#    libMEDMEMBinTest_la_CPPFLAGS+= ${KERNEL_CXXFLAGS}
#    libMEDMEMBinTest_la_LDFLAGS+= ${KERNEL_LDFLAGS} -lSALOMELocalTrace 
#endif
@MED_ENABLE_KERNEL_FALSE@AM_CPPFLAGS = -I$(top_builddir)/adm_local_without_kernel \
@MED_ENABLE_KERNEL_FALSE@	-include SALOMEconfig.h \
@MED_ENABLE_KERNEL_FALSE@	$(MED3_INCLUDES) $(HDF5_INCLUDES) \
@MED_ENABLE_KERNEL_FALSE@	@CXXTMPDPTHFLAGS@ \
@MED_ENABLE_KERNEL_FALSE@	-I$(srcdir)/../INTERP_KERNEL \
@MED_ENABLE_KERNEL_FALSE@	-I$(srcdir)/../INTERP_KERNEL/Bases \
@MED_ENABLE_KERNEL_FALSE@	-I$(srcdir)/../INTERP_KERNEL/GaussPoints \
@MED_ENABLE_KERNEL_FALSE@	-I$(srcdir)/../MEDMEM

#  MED MEDMEM : MED files in memory
#

# first '.' says that this folder must be compiled before Test (MEDMEM/Test uses MEDMEM)
#if CPPUNIT_IS_OK
# SUBDIRS=. Test
#endif

#DIST_SUBDIRS= Test

#lib_LTLIBRARIES= libMEDMEMBinTest.la

#libmedmem_la_LDFLAGS= -L$(top_builddir)/lib@LIB_LOCATION_SUFFIX@/salome 
#libMEDMEMBinTest_la_CPPFLAGS= $(MED3_INCLUDES) $(HDF5_INCLUDES) @CXXTMPDPTHFLAGS@ \
#	-I$(srcdir)/../MEDWrapper/Base \
#	-I$(srcdir)/../MEDWrapper/V2_1/Core -I$(srcdir)/../INTERPOLATION

# change motivated by the bug KERNEL4778.
#libMEDMEMBinTest_la_LDFLAGS=$(MED3_LIBS_C_ONLY) $(HDF5_LIBS) ../MEDWrapper/V2_1/Core/libmed_V2_1.la \
#	../MEDWrapper/Base/libMEDWrapperBase.la $(STDLIB)
#if MED_ENABLE_KERNEL
#    libMEDMEMBinTest_la_CPPFLAGS+= ${KERNEL_CXXFLAGS}
#    libMEDMEMBinTest_la_LDFLAGS+= ${KERNEL_LDFLAGS} -lSALOMELocalTrace 
#endif
@MED_ENABLE_KERNEL_TRUE@AM_CPPFLAGS = @KERNEL_CXXFLAGS@ -include \
@MED_ENABLE_KERNEL_TRUE@	SALOMEconfig.h $(MED3_INCLUDES) \
@MED_ENABLE_KERNEL_TRUE@	$(HDF5_INCLUDES) @CXXTMPDPTHFLAGS@ \
@MED_ENABLE_KERNEL_TRUE@	-I$(srcdir)/../INTERP_KERNEL \
@MED_ENABLE_KERNEL_TRUE@	-I$(srcdir)/../INTERP_KERNEL/Bases \
@MED_ENABLE_KERNEL_TRUE@	-I$(srcdir)/../INTERP_KERNEL/GaussPoints \
@MED_ENABLE_KERNEL_TRUE@	-I$(srcdir)/../MEDMEM \
@MED_ENABLE_KERNEL_TRUE@	${KERNEL_CXXFLAGS}

# ============================================================
# Cmake files wildcard (to add then to the distribution)
# ============================================================
CMAKEFILES = $(notdir $(wildcard $(srcdir)/CMakeLists.txt))

# ============================================================
# This file defines the common definitions used in several
# Makefile. This file must be included, if needed, by the file
# Makefile.am.
# ============================================================
# Standard directory for installation
#
salomeincludedir = $(includedir)/salome
purebindir = $(prefix)/bin
salomescriptdir = $(bindir)
salomepythondir = $(pythondir)/salome
salomepyexecdir = $(pyexecdir)/salome

# Tests environment folders
testsenvirondir = $(prefix)/Tests/environ
testsenvironcshdir = $(prefix)/Tests/environ/csh

# Directory for installing idl files
salomeidldir = $(prefix)/idl/salome

# Directory for installing resource files
salomeresdir = $(prefix)/share/salome/resources/@MODULE_NAME@

# Directories for installing admin files
admlocaldir = $(prefix)/adm_local
admlocalunixdir = $(admlocaldir)/unix
admlocalm4dir = $(admlocaldir)/unix/config_files

# Shared modules installation directory
sharedpkgpythondir = $(salomepythondir)/shared_modules
EXTRA_DIST = $(CMAKEFILES) $(OBSOLETE_FILES) $(SCRIPT_TESTS)
LDADD = $(MED3_LIBS_C_ONLY) $(HDF5_LIBS) $(STDLIB) \
	../MEDMEM/libmedmem.la ../INTERP_KERNEL/libinterpkernel.la \
	$(am__append_1)

#AM_CPPFLAGS= $(libMEDMEMBinTest_la_CPPFLAGS)
#LDADD= $(libMEDMEMBinTest_la_LDFLAGS) -lm libMEDMEMBinTest.la
TESTS = $(bin_PROGRAMS) $(SCRIPT_TESTS)

# scripts running tests with appropriate arguments
SCRIPT_TESTS = \
	scripts/check_convertToPoly \
	scripts/check_duplicateMED \
	scripts/check_ensight2med \
	scripts/check_med2ensight \
	scripts/check_med2vtk \
	scripts/check_readCoordinate \
	scripts/check_readEntete \
	scripts/check_testAnalFile \
	scripts/check_test_MEDMEM_PolyDriverMedMeshRead \
	scripts/check_test_MEDMEM_PolyDriverMedMeshWrite \
	scripts/check_test_MEDMEM_poly3D \
	scripts/check_test_copie_connectivity \
	scripts/check_test_copie_family \
	scripts/check_test_copie_fieldT \
	scripts/check_test_copie_field_ \
	scripts/check_test_copie_group \
	scripts/check_test_copie_mesh \
	scripts/check_test_copie_support \
	scripts/check_test_gibi_driver \
	scripts/check_test_grid \
	scripts/check_test_operation_fielddouble \
	scripts/check_test_operation_fieldint \
	scripts/check_test_porflow_driver \
	scripts/check_test_profil_MedFieldDriver \
	scripts/check_test_profil_gauss_MedFieldDriver

TESTS_ENVIRONMENT = $(SHELL)

#if MED_ENABLE_KERNEL
#     LDADD+=-lSALOMEBasics
#endif
dist_dumpInterpolation_SOURCES = dumpInterpolation.cxx
dist_convertToPoly_SOURCES = convertToPoly.cxx
dist_ensight2med_SOURCES = ensight2med.cxx
dist_med2ensight_SOURCES = med2ensight.cxx
dist_med2vtk_SOURCES = med2vtk.cxx
dist_duplicateMED_SOURCES = duplicateMED.cxx
dist_medmembin_test_SOURCES = med_test.cxx
dist_duplicateMEDMESH_SOURCES = duplicateMEDMESH.cxx
dist_test_write_groups_poly_SOURCES = test_write_groups_poly.cxx
dist_test_MEDMEM_ModulusArray_SOURCES = test_MEDMEM_ModulusArray.cxx
dist_test_MEDMEM_Array_SOURCES = test_MEDMEM_Array.cxx
dist_test_MEDMEM_SkyLineArray_SOURCES = test_MEDMEM_SkyLineArray.cxx
dist_test_MEDMEM_CellModel_SOURCES = test_MEDMEM_CellModel.cxx
dist_testUPointerOf_SOURCES = tests/testUPointerOf.cxx
dist_testUCoordinate_SOURCES = tests/testUCoordinate.cxx
dist_testUUnit_SOURCES = tests/testUUnit.cxx
dist_testUGeoNameMeshEntities_SOURCES = tests/testUGeoNameMeshEntities.cxx
dist_testUMedException_SOURCES = tests/testUMedException.cxx
dist_testUModulusArray_SOURCES = tests/testUModulusArray.cxx
dist_testUSkyLineArray_SOURCES = tests/testUSkyLineArray.cxx
dist_testUArray_SOURCES = tests/testUArray.cxx
dist_testUCellModel_SOURCES = tests/testUCellModel.cxx
dist_readEntete_SOURCES = tests/readEntete.cxx
dist_readCoordinate_SOURCES = tests/readCoordinate.cxx
dist_test_copie_field__SOURCES = test_copie_field_.cxx
dist_test_copie_fieldT_SOURCES = test_copie_fieldT.cxx
dist_test_copie_coordinate_SOURCES = test_copie_coordinate.cxx
dist_test_copie_medarray_SOURCES = test_copie_medarray.cxx
dist_test_copie_connectivity_SOURCES = test_copie_connectivity.cxx
dist_test_copie_support_SOURCES = test_copie_support.cxx
dist_test_copie_family_SOURCES = test_copie_family.cxx
dist_test_copie_group_SOURCES = test_copie_group.cxx
dist_test_copie_mesh_SOURCES = test_copie_mesh.cxx
dist_test_affect_medarray_SOURCES = test_affect_medarray.cxx
dist_test_MEDMEM_Meshing_SOURCES = test_MEDMEM_Meshing.cxx
dist_test_MEDMEM_MeshingPoly_SOURCES = test_MEDMEM_MeshingPoly.cxx
dist_test_operation_fielddouble_SOURCES = test_operation_fielddouble.cxx
dist_test_operation_fieldint_SOURCES = test_operation_fieldint.cxx
dist_test_gibi_driver_SOURCES = test_gibi_driver.cxx
dist_test_porflow_driver_SOURCES = test_porflow_driver.cxx
dist_test_grid_SOURCES = test_grid.cxx
dist_test_MEDMEM_PolyDriverMedMeshRead_SOURCES = test_MEDMEM_PolyDriverMedMeshRead.cxx
dist_test_MEDMEM_PolyDriverMedMeshWrite_SOURCES = test_MEDMEM_PolyDriverMedMeshWrite.cxx
dist_test_MEDMEM_poly3D_SOURCES = test_MEDMEM_poly3D.cxx
dist_test_MEDMEM_nArray_SOURCES = test_MEDMEM_nArray.cxx
dist_test_MEDMEM_Meshing_poly_SOURCES = test_MEDMEM_Meshing_poly.cxx
dist_test_profil_MedFieldDriver_SOURCES = test_profil_MedFieldDriver.cxx
dist_test_profil_gauss_MedFieldDriver_SOURCES = test_profil_gauss_MedFieldDriver.cxx
dist_test_GaussLocalization_SOURCES = test_GaussLocalization.cxx
dist_testAnalFile_SOURCES = testAnalFile.cxx
dist_test_MEDMEM_MeshingFlica_SOURCES = test_MEDMEM_MeshingFlica.cxx
dist_testConvertPolygon_SOURCES = testConvertPolygon.cxx
OBSOLETE_FILES = \
	create_poly2D.c \
	testAG.cxx

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cxx .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/adm_local/unix/make_common_starter.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/MEDMEMBinTest/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/MEDMEMBinTest/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
convertToPoly$(EXEEXT): $(convertToPoly_OBJECTS) $(convertToPoly_DEPENDENCIES) 
	@rm -f convertToPoly$(EXEEXT)
	$(CXXLINK) $(convertToPoly_OBJECTS) $(convertToPoly_LDADD) $(LIBS)
create_grid$(EXEEXT): $(create_grid_OBJECTS) $(create_grid_DEPENDENCIES) 
	@rm -f create_grid$(EXEEXT)
	$(LINK) $(create_grid_OBJECTS) $(create_grid_LDADD) $(LIBS)
create_mesh$(EXEEXT): $(create_mesh_OBJECTS) $(create_mesh_DEPENDENCIES) 
	@rm -f create_mesh$(EXEEXT)
	$(LINK) $(create_mesh_OBJECTS) $(create_mesh_LDADD) $(LIBS)
create_mesh_c2q4$(EXEEXT): $(create_mesh_c2q4_OBJECTS) $(create_mesh_c2q4_DEPENDENCIES) 
	@rm -f create_mesh_c2q4$(EXEEXT)
	$(LINK) $(create_mesh_c2q4_OBJECTS) $(create_mesh_c2q4_LDADD) $(LIBS)
create_mesh_c2q4s2$(EXEEXT): $(create_mesh_c2q4s2_OBJECTS) $(create_mesh_c2q4s2_DEPENDENCIES) 
	@rm -f create_mesh_c2q4s2$(EXEEXT)
	$(LINK) $(create_mesh_c2q4s2_OBJECTS) $(create_mesh_c2q4s2_LDADD) $(LIBS)
create_mesh_c2q4s2_wrong$(EXEEXT): $(create_mesh_c2q4s2_wrong_OBJECTS) $(create_mesh_c2q4s2_wrong_DEPENDENCIES) 
	@rm -f create_mesh_c2q4s2_wrong$(EXEEXT)
	$(LINK) $(create_mesh_c2q4s2_wrong_OBJECTS) $(create_mesh_c2q4s2_wrong_LDADD) $(LIBS)
create_mesh_c3h8$(EXEEXT): $(create_mesh_c3h8_OBJECTS) $(create_mesh_c3h8_DEPENDENCIES) 
	@rm -f create_mesh_c3h8$(EXEEXT)
	$(LINK) $(create_mesh_c3h8_OBJECTS) $(create_mesh_c3h8_LDADD) $(LIBS)
create_mesh_c3h8q4$(EXEEXT): $(create_mesh_c3h8q4_OBJECTS) $(create_mesh_c3h8q4_DEPENDENCIES) 
	@rm -f create_mesh_c3h8q4$(EXEEXT)
	$(LINK) $(create_mesh_c3h8q4_OBJECTS) $(create_mesh_c3h8q4_LDADD) $(LIBS)
create_mesh_c3h8q4_wrong$(EXEEXT): $(create_mesh_c3h8q4_wrong_OBJECTS) $(create_mesh_c3h8q4_wrong_DEPENDENCIES) 
	@rm -f create_mesh_c3h8q4_wrong$(EXEEXT)
	$(LINK) $(create_mesh_c3h8q4_wrong_OBJECTS) $(create_mesh_c3h8q4_wrong_LDADD) $(LIBS)
create_poly3D$(EXEEXT): $(create_poly3D_OBJECTS) $(create_poly3D_DEPENDENCIES) 
	@rm -f create_poly3D$(EXEEXT)
	$(LINK) $(create_poly3D_OBJECTS) $(create_poly3D_LDADD) $(LIBS)
dumpInterpolation$(EXEEXT): $(dumpInterpolation_OBJECTS) $(dumpInterpolation_DEPENDENCIES) 
	@rm -f dumpInterpolation$(EXEEXT)
	$(CXXLINK) $(dumpInterpolation_OBJECTS) $(dumpInterpolation_LDADD) $(LIBS)
duplicateMED$(EXEEXT): $(duplicateMED_OBJECTS) $(duplicateMED_DEPENDENCIES) 
	@rm -f duplicateMED$(EXEEXT)
	$(CXXLINK) $(duplicateMED_OBJECTS) $(duplicateMED_LDADD) $(LIBS)
duplicateMEDMESH$(EXEEXT): $(duplicateMEDMESH_OBJECTS) $(duplicateMEDMESH_DEPENDENCIES) 
	@rm -f duplicateMEDMESH$(EXEEXT)
	$(CXXLINK) $(duplicateMEDMESH_OBJECTS) $(duplicateMEDMESH_LDADD) $(LIBS)
ensight2med$(EXEEXT): $(ensight2med_OBJECTS) $(ensight2med_DEPENDENCIES) 
	@rm -f ensight2med$(EXEEXT)
	$(CXXLINK) $(ensight2med_OBJECTS) $(ensight2med_LDADD) $(LIBS)
med2ensight$(EXEEXT): $(med2ensight_OBJECTS) $(med2ensight_DEPENDENCIES) 
	@rm -f med2ensight$(EXEEXT)
	$(CXXLINK) $(med2ensight_OBJECTS) $(med2ensight_LDADD) $(LIBS)
med2vtk$(EXEEXT): $(med2vtk_OBJECTS) $(med2vtk_DEPENDENCIES) 
	@rm -f med2vtk$(EXEEXT)
	$(CXXLINK) $(med2vtk_OBJECTS) $(med2vtk_LDADD) $(LIBS)
medmembin_test$(EXEEXT): $(medmembin_test_OBJECTS) $(medmembin_test_DEPENDENCIES) 
	@rm -f medmembin_test$(EXEEXT)
	$(CXXLINK) $(medmembin_test_OBJECTS) $(medmembin_test_LDADD) $(LIBS)
readCoordinate$(EXEEXT): $(readCoordinate_OBJECTS) $(readCoordinate_DEPENDENCIES) 
	@rm -f readCoordinate$(EXEEXT)
	$(CXXLINK) $(readCoordinate_OBJECTS) $(readCoordinate_LDADD) $(LIBS)
readEntete$(EXEEXT): $(readEntete_OBJECTS) $(readEntete_DEPENDENCIES) 
	@rm -f readEntete$(EXEEXT)
	$(CXXLINK) $(readEntete_OBJECTS) $(readEntete_LDADD) $(LIBS)
testAnalFile$(EXEEXT): $(testAnalFile_OBJECTS) $(testAnalFile_DEPENDENCIES) 
	@rm -f testAnalFile$(EXEEXT)
	$(CXXLINK) $(testAnalFile_OBJECTS) $(testAnalFile_LDADD) $(LIBS)
testConvertPolygon$(EXEEXT): $(testConvertPolygon_OBJECTS) $(testConvertPolygon_DEPENDENCIES) 
	@rm -f testConvertPolygon$(EXEEXT)
	$(CXXLINK) $(testConvertPolygon_OBJECTS) $(testConvertPolygon_LDADD) $(LIBS)
testUArray$(EXEEXT): $(testUArray_OBJECTS) $(testUArray_DEPENDENCIES) 
	@rm -f testUArray$(EXEEXT)
	$(CXXLINK) $(testUArray_OBJECTS) $(testUArray_LDADD) $(LIBS)
testUCellModel$(EXEEXT): $(testUCellModel_OBJECTS) $(testUCellModel_DEPENDENCIES) 
	@rm -f testUCellModel$(EXEEXT)
	$(CXXLINK) $(testUCellModel_OBJECTS) $(testUCellModel_LDADD) $(LIBS)
testUCoordinate$(EXEEXT): $(testUCoordinate_OBJECTS) $(testUCoordinate_DEPENDENCIES) 
	@rm -f testUCoordinate$(EXEEXT)
	$(CXXLINK) $(testUCoordinate_OBJECTS) $(testUCoordinate_LDADD) $(LIBS)
testUGeoNameMeshEntities$(EXEEXT): $(testUGeoNameMeshEntities_OBJECTS) $(testUGeoNameMeshEntities_DEPENDENCIES) 
	@rm -f testUGeoNameMeshEntities$(EXEEXT)
	$(CXXLINK) $(testUGeoNameMeshEntities_OBJECTS) $(testUGeoNameMeshEntities_LDADD) $(LIBS)
testUMedException$(EXEEXT): $(testUMedException_OBJECTS) $(testUMedException_DEPENDENCIES) 
	@rm -f testUMedException$(EXEEXT)
	$(CXXLINK) $(testUMedException_OBJECTS) $(testUMedException_LDADD) $(LIBS)
testUModulusArray$(EXEEXT): $(testUModulusArray_OBJECTS) $(testUModulusArray_DEPENDENCIES) 
	@rm -f testUModulusArray$(EXEEXT)
	$(CXXLINK) $(testUModulusArray_OBJECTS) $(testUModulusArray_LDADD) $(LIBS)
testUPointerOf$(EXEEXT): $(testUPointerOf_OBJECTS) $(testUPointerOf_DEPENDENCIES) 
	@rm -f testUPointerOf$(EXEEXT)
	$(CXXLINK) $(testUPointerOf_OBJECTS) $(testUPointerOf_LDADD) $(LIBS)
testUSkyLineArray$(EXEEXT): $(testUSkyLineArray_OBJECTS) $(testUSkyLineArray_DEPENDENCIES) 
	@rm -f testUSkyLineArray$(EXEEXT)
	$(CXXLINK) $(testUSkyLineArray_OBJECTS) $(testUSkyLineArray_LDADD) $(LIBS)
testUUnit$(EXEEXT): $(testUUnit_OBJECTS) $(testUUnit_DEPENDENCIES) 
	@rm -f testUUnit$(EXEEXT)
	$(CXXLINK) $(testUUnit_OBJECTS) $(testUUnit_LDADD) $(LIBS)
test_GaussLocalization$(EXEEXT): $(test_GaussLocalization_OBJECTS) $(test_GaussLocalization_DEPENDENCIES) 
	@rm -f test_GaussLocalization$(EXEEXT)
	$(CXXLINK) $(test_GaussLocalization_OBJECTS) $(test_GaussLocalization_LDADD) $(LIBS)
test_MEDMEM_Array$(EXEEXT): $(test_MEDMEM_Array_OBJECTS) $(test_MEDMEM_Array_DEPENDENCIES) 
	@rm -f test_MEDMEM_Array$(EXEEXT)
	$(CXXLINK) $(test_MEDMEM_Array_OBJECTS) $(test_MEDMEM_Array_LDADD) $(LIBS)
test_MEDMEM_CellModel$(EXEEXT): $(test_MEDMEM_CellModel_OBJECTS) $(test_MEDMEM_CellModel_DEPENDENCIES) 
	@rm -f test_MEDMEM_CellModel$(EXEEXT)
	$(CXXLINK) $(test_MEDMEM_CellModel_OBJECTS) $(test_MEDMEM_CellModel_LDADD) $(LIBS)
test_MEDMEM_Meshing$(EXEEXT): $(test_MEDMEM_Meshing_OBJECTS) $(test_MEDMEM_Meshing_DEPENDENCIES) 
	@rm -f test_MEDMEM_Meshing$(EXEEXT)
	$(CXXLINK) $(test_MEDMEM_Meshing_OBJECTS) $(test_MEDMEM_Meshing_LDADD) $(LIBS)
test_MEDMEM_MeshingFlica$(EXEEXT): $(test_MEDMEM_MeshingFlica_OBJECTS) $(test_MEDMEM_MeshingFlica_DEPENDENCIES) 
	@rm -f test_MEDMEM_MeshingFlica$(EXEEXT)
	$(CXXLINK) $(test_MEDMEM_MeshingFlica_OBJECTS) $(test_MEDMEM_MeshingFlica_LDADD) $(LIBS)
test_MEDMEM_MeshingPoly$(EXEEXT): $(test_MEDMEM_MeshingPoly_OBJECTS) $(test_MEDMEM_MeshingPoly_DEPENDENCIES) 
	@rm -f test_MEDMEM_MeshingPoly$(EXEEXT)
	$(CXXLINK) $(test_MEDMEM_MeshingPoly_OBJECTS) $(test_MEDMEM_MeshingPoly_LDADD) $(LIBS)
test_MEDMEM_Meshing_poly$(EXEEXT): $(test_MEDMEM_Meshing_poly_OBJECTS) $(test_MEDMEM_Meshing_poly_DEPENDENCIES) 
	@rm -f test_MEDMEM_Meshing_poly$(EXEEXT)
	$(CXXLINK) $(test_MEDMEM_Meshing_poly_OBJECTS) $(test_MEDMEM_Meshing_poly_LDADD) $(LIBS)
test_MEDMEM_ModulusArray$(EXEEXT): $(test_MEDMEM_ModulusArray_OBJECTS) $(test_MEDMEM_ModulusArray_DEPENDENCIES) 
	@rm -f test_MEDMEM_ModulusArray$(EXEEXT)
	$(CXXLINK) $(test_MEDMEM_ModulusArray_OBJECTS) $(test_MEDMEM_ModulusArray_LDADD) $(LIBS)
test_MEDMEM_PolyDriverMedMeshRead$(EXEEXT): $(test_MEDMEM_PolyDriverMedMeshRead_OBJECTS) $(test_MEDMEM_PolyDriverMedMeshRead_DEPENDENCIES) 
	@rm -f test_MEDMEM_PolyDriverMedMeshRead$(EXEEXT)
	$(CXXLINK) $(test_MEDMEM_PolyDriverMedMeshRead_OBJECTS) $(test_MEDMEM_PolyDriverMedMeshRead_LDADD) $(LIBS)
test_MEDMEM_PolyDriverMedMeshWrite$(EXEEXT): $(test_MEDMEM_PolyDriverMedMeshWrite_OBJECTS) $(test_MEDMEM_PolyDriverMedMeshWrite_DEPENDENCIES) 
	@rm -f test_MEDMEM_PolyDriverMedMeshWrite$(EXEEXT)
	$(CXXLINK) $(test_MEDMEM_PolyDriverMedMeshWrite_OBJECTS) $(test_MEDMEM_PolyDriverMedMeshWrite_LDADD) $(LIBS)
test_MEDMEM_SkyLineArray$(EXEEXT): $(test_MEDMEM_SkyLineArray_OBJECTS) $(test_MEDMEM_SkyLineArray_DEPENDENCIES) 
	@rm -f test_MEDMEM_SkyLineArray$(EXEEXT)
	$(CXXLINK) $(test_MEDMEM_SkyLineArray_OBJECTS) $(test_MEDMEM_SkyLineArray_LDADD) $(LIBS)
test_MEDMEM_nArray$(EXEEXT): $(test_MEDMEM_nArray_OBJECTS) $(test_MEDMEM_nArray_DEPENDENCIES) 
	@rm -f test_MEDMEM_nArray$(EXEEXT)
	$(CXXLINK) $(test_MEDMEM_nArray_OBJECTS) $(test_MEDMEM_nArray_LDADD) $(LIBS)
test_MEDMEM_poly3D$(EXEEXT): $(test_MEDMEM_poly3D_OBJECTS) $(test_MEDMEM_poly3D_DEPENDENCIES) 
	@rm -f test_MEDMEM_poly3D$(EXEEXT)
	$(CXXLINK) $(test_MEDMEM_poly3D_OBJECTS) $(test_MEDMEM_poly3D_LDADD) $(LIBS)
test_affect_medarray$(EXEEXT): $(test_affect_medarray_OBJECTS) $(test_affect_medarray_DEPENDENCIES) 
	@rm -f test_affect_medarray$(EXEEXT)
	$(CXXLINK) $(test_affect_medarray_OBJECTS) $(test_affect_medarray_LDADD) $(LIBS)
test_copie_connectivity$(EXEEXT): $(test_copie_connectivity_OBJECTS) $(test_copie_connectivity_DEPENDENCIES) 
	@rm -f test_copie_connectivity$(EXEEXT)
	$(CXXLINK) $(test_copie_connectivity_OBJECTS) $(test_copie_connectivity_LDADD) $(LIBS)
test_copie_coordinate$(EXEEXT): $(test_copie_coordinate_OBJECTS) $(test_copie_coordinate_DEPENDENCIES) 
	@rm -f test_copie_coordinate$(EXEEXT)
	$(CXXLINK) $(test_copie_coordinate_OBJECTS) $(test_copie_coordinate_LDADD) $(LIBS)
test_copie_family$(EXEEXT): $(test_copie_family_OBJECTS) $(test_copie_family_DEPENDENCIES) 
	@rm -f test_copie_family$(EXEEXT)
	$(CXXLINK) $(test_copie_family_OBJECTS) $(test_copie_family_LDADD) $(LIBS)
test_copie_fieldT$(EXEEXT): $(test_copie_fieldT_OBJECTS) $(test_copie_fieldT_DEPENDENCIES) 
	@rm -f test_copie_fieldT$(EXEEXT)
	$(CXXLINK) $(test_copie_fieldT_OBJECTS) $(test_copie_fieldT_LDADD) $(LIBS)
test_copie_field_$(EXEEXT): $(test_copie_field__OBJECTS) $(test_copie_field__DEPENDENCIES) 
	@rm -f test_copie_field_$(EXEEXT)
	$(CXXLINK) $(test_copie_field__OBJECTS) $(test_copie_field__LDADD) $(LIBS)
test_copie_group$(EXEEXT): $(test_copie_group_OBJECTS) $(test_copie_group_DEPENDENCIES) 
	@rm -f test_copie_group$(EXEEXT)
	$(CXXLINK) $(test_copie_group_OBJECTS) $(test_copie_group_LDADD) $(LIBS)
test_copie_medarray$(EXEEXT): $(test_copie_medarray_OBJECTS) $(test_copie_medarray_DEPENDENCIES) 
	@rm -f test_copie_medarray$(EXEEXT)
	$(CXXLINK) $(test_copie_medarray_OBJECTS) $(test_copie_medarray_LDADD) $(LIBS)
test_copie_mesh$(EXEEXT): $(test_copie_mesh_OBJECTS) $(test_copie_mesh_DEPENDENCIES) 
	@rm -f test_copie_mesh$(EXEEXT)
	$(CXXLINK) $(test_copie_mesh_OBJECTS) $(test_copie_mesh_LDADD) $(LIBS)
test_copie_support$(EXEEXT): $(test_copie_support_OBJECTS) $(test_copie_support_DEPENDENCIES) 
	@rm -f test_copie_support$(EXEEXT)
	$(CXXLINK) $(test_copie_support_OBJECTS) $(test_copie_support_LDADD) $(LIBS)
test_gibi_driver$(EXEEXT): $(test_gibi_driver_OBJECTS) $(test_gibi_driver_DEPENDENCIES) 
	@rm -f test_gibi_driver$(EXEEXT)
	$(CXXLINK) $(test_gibi_driver_OBJECTS) $(test_gibi_driver_LDADD) $(LIBS)
test_grid$(EXEEXT): $(test_grid_OBJECTS) $(test_grid_DEPENDENCIES) 
	@rm -f test_grid$(EXEEXT)
	$(CXXLINK) $(test_grid_OBJECTS) $(test_grid_LDADD) $(LIBS)
test_operation_fielddouble$(EXEEXT): $(test_operation_fielddouble_OBJECTS) $(test_operation_fielddouble_DEPENDENCIES) 
	@rm -f test_operation_fielddouble$(EXEEXT)
	$(CXXLINK) $(test_operation_fielddouble_OBJECTS) $(test_operation_fielddouble_LDADD) $(LIBS)
test_operation_fieldint$(EXEEXT): $(test_operation_fieldint_OBJECTS) $(test_operation_fieldint_DEPENDENCIES) 
	@rm -f test_operation_fieldint$(EXEEXT)
	$(CXXLINK) $(test_operation_fieldint_OBJECTS) $(test_operation_fieldint_LDADD) $(LIBS)
test_porflow_driver$(EXEEXT): $(test_porflow_driver_OBJECTS) $(test_porflow_driver_DEPENDENCIES) 
	@rm -f test_porflow_driver$(EXEEXT)
	$(CXXLINK) $(test_porflow_driver_OBJECTS) $(test_porflow_driver_LDADD) $(LIBS)
test_profil_MedFieldDriver$(EXEEXT): $(test_profil_MedFieldDriver_OBJECTS) $(test_profil_MedFieldDriver_DEPENDENCIES) 
	@rm -f test_profil_MedFieldDriver$(EXEEXT)
	$(CXXLINK) $(test_profil_MedFieldDriver_OBJECTS) $(test_profil_MedFieldDriver_LDADD) $(LIBS)
test_profil_gauss_MedFieldDriver$(EXEEXT): $(test_profil_gauss_MedFieldDriver_OBJECTS) $(test_profil_gauss_MedFieldDriver_DEPENDENCIES) 
	@rm -f test_profil_gauss_MedFieldDriver$(EXEEXT)
	$(CXXLINK) $(test_profil_gauss_MedFieldDriver_OBJECTS) $(test_profil_gauss_MedFieldDriver_LDADD) $(LIBS)
test_write_groups_poly$(EXEEXT): $(test_write_groups_poly_OBJECTS) $(test_write_groups_poly_DEPENDENCIES) 
	@rm -f test_write_groups_poly$(EXEEXT)
	$(CXXLINK) $(test_write_groups_poly_OBJECTS) $(test_write_groups_poly_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/convertToPoly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create_grid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create_mesh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create_mesh_c2q4.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create_mesh_c2q4s2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create_mesh_c2q4s2_wrong.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create_mesh_c3h8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create_mesh_c3h8q4.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create_mesh_c3h8q4_wrong.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create_poly3D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dumpInterpolation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/duplicateMED.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/duplicateMEDMESH.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ensight2med.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/med2ensight.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/med2vtk.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/med_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/readCoordinate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/readEntete.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testAnalFile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testConvertPolygon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testUArray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testUCellModel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testUCoordinate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testUGeoNameMeshEntities.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testUMedException.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testUModulusArray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testUPointerOf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testUSkyLineArray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testUUnit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_GaussLocalization.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MEDMEM_Array.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MEDMEM_CellModel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MEDMEM_Meshing.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MEDMEM_MeshingFlica.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MEDMEM_MeshingPoly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MEDMEM_Meshing_poly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MEDMEM_ModulusArray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MEDMEM_PolyDriverMedMeshRead.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MEDMEM_PolyDriverMedMeshWrite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MEDMEM_SkyLineArray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MEDMEM_nArray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MEDMEM_poly3D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_affect_medarray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_copie_connectivity.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_copie_coordinate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_copie_family.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_copie_fieldT.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_copie_field_.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_copie_group.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_copie_medarray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_copie_mesh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_copie_support.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_gibi_driver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_grid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_operation_fielddouble.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_operation_fieldint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_porflow_driver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_profil_MedFieldDriver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_profil_gauss_MedFieldDriver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_write_groups_poly.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

.cxx.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

readCoordinate.o: tests/readCoordinate.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT readCoordinate.o -MD -MP -MF $(DEPDIR)/readCoordinate.Tpo -c -o readCoordinate.o `test -f 'tests/readCoordinate.cxx' || echo '$(srcdir)/'`tests/readCoordinate.cxx
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/readCoordinate.Tpo $(DEPDIR)/readCoordinate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/readCoordinate.cxx' object='readCoordinate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o readCoordinate.o `test -f 'tests/readCoordinate.cxx' || echo '$(srcdir)/'`tests/readCoordinate.cxx

readCoordinate.obj: tests/readCoordinate.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT readCoordinate.obj -MD -MP -MF $(DEPDIR)/readCoordinate.Tpo -c -o readCoordinate.obj `if test -f 'tests/readCoordinate.cxx'; then $(CYGPATH_W) 'tests/readCoordinate.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/readCoordinate.cxx'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/readCoordinate.Tpo $(DEPDIR)/readCoordinate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/readCoordinate.cxx' object='readCoordinate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o readCoordinate.obj `if test -f 'tests/readCoordinate.cxx'; then $(CYGPATH_W) 'tests/readCoordinate.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/readCoordinate.cxx'; fi`

readEntete.o: tests/readEntete.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT readEntete.o -MD -MP -MF $(DEPDIR)/readEntete.Tpo -c -o readEntete.o `test -f 'tests/readEntete.cxx' || echo '$(srcdir)/'`tests/readEntete.cxx
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/readEntete.Tpo $(DEPDIR)/readEntete.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/readEntete.cxx' object='readEntete.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o readEntete.o `test -f 'tests/readEntete.cxx' || echo '$(srcdir)/'`tests/readEntete.cxx

readEntete.obj: tests/readEntete.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT readEntete.obj -MD -MP -MF $(DEPDIR)/readEntete.Tpo -c -o readEntete.obj `if test -f 'tests/readEntete.cxx'; then $(CYGPATH_W) 'tests/readEntete.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/readEntete.cxx'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/readEntete.Tpo $(DEPDIR)/readEntete.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/readEntete.cxx' object='readEntete.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o readEntete.obj `if test -f 'tests/readEntete.cxx'; then $(CYGPATH_W) 'tests/readEntete.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/readEntete.cxx'; fi`

testUArray.o: tests/testUArray.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUArray.o -MD -MP -MF $(DEPDIR)/testUArray.Tpo -c -o testUArray.o `test -f 'tests/testUArray.cxx' || echo '$(srcdir)/'`tests/testUArray.cxx
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUArray.Tpo $(DEPDIR)/testUArray.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUArray.cxx' object='testUArray.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUArray.o `test -f 'tests/testUArray.cxx' || echo '$(srcdir)/'`tests/testUArray.cxx

testUArray.obj: tests/testUArray.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUArray.obj -MD -MP -MF $(DEPDIR)/testUArray.Tpo -c -o testUArray.obj `if test -f 'tests/testUArray.cxx'; then $(CYGPATH_W) 'tests/testUArray.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUArray.cxx'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUArray.Tpo $(DEPDIR)/testUArray.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUArray.cxx' object='testUArray.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUArray.obj `if test -f 'tests/testUArray.cxx'; then $(CYGPATH_W) 'tests/testUArray.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUArray.cxx'; fi`

testUCellModel.o: tests/testUCellModel.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUCellModel.o -MD -MP -MF $(DEPDIR)/testUCellModel.Tpo -c -o testUCellModel.o `test -f 'tests/testUCellModel.cxx' || echo '$(srcdir)/'`tests/testUCellModel.cxx
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUCellModel.Tpo $(DEPDIR)/testUCellModel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUCellModel.cxx' object='testUCellModel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUCellModel.o `test -f 'tests/testUCellModel.cxx' || echo '$(srcdir)/'`tests/testUCellModel.cxx

testUCellModel.obj: tests/testUCellModel.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUCellModel.obj -MD -MP -MF $(DEPDIR)/testUCellModel.Tpo -c -o testUCellModel.obj `if test -f 'tests/testUCellModel.cxx'; then $(CYGPATH_W) 'tests/testUCellModel.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUCellModel.cxx'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUCellModel.Tpo $(DEPDIR)/testUCellModel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUCellModel.cxx' object='testUCellModel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUCellModel.obj `if test -f 'tests/testUCellModel.cxx'; then $(CYGPATH_W) 'tests/testUCellModel.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUCellModel.cxx'; fi`

testUCoordinate.o: tests/testUCoordinate.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUCoordinate.o -MD -MP -MF $(DEPDIR)/testUCoordinate.Tpo -c -o testUCoordinate.o `test -f 'tests/testUCoordinate.cxx' || echo '$(srcdir)/'`tests/testUCoordinate.cxx
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUCoordinate.Tpo $(DEPDIR)/testUCoordinate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUCoordinate.cxx' object='testUCoordinate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUCoordinate.o `test -f 'tests/testUCoordinate.cxx' || echo '$(srcdir)/'`tests/testUCoordinate.cxx

testUCoordinate.obj: tests/testUCoordinate.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUCoordinate.obj -MD -MP -MF $(DEPDIR)/testUCoordinate.Tpo -c -o testUCoordinate.obj `if test -f 'tests/testUCoordinate.cxx'; then $(CYGPATH_W) 'tests/testUCoordinate.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUCoordinate.cxx'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUCoordinate.Tpo $(DEPDIR)/testUCoordinate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUCoordinate.cxx' object='testUCoordinate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUCoordinate.obj `if test -f 'tests/testUCoordinate.cxx'; then $(CYGPATH_W) 'tests/testUCoordinate.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUCoordinate.cxx'; fi`

testUGeoNameMeshEntities.o: tests/testUGeoNameMeshEntities.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUGeoNameMeshEntities.o -MD -MP -MF $(DEPDIR)/testUGeoNameMeshEntities.Tpo -c -o testUGeoNameMeshEntities.o `test -f 'tests/testUGeoNameMeshEntities.cxx' || echo '$(srcdir)/'`tests/testUGeoNameMeshEntities.cxx
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUGeoNameMeshEntities.Tpo $(DEPDIR)/testUGeoNameMeshEntities.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUGeoNameMeshEntities.cxx' object='testUGeoNameMeshEntities.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUGeoNameMeshEntities.o `test -f 'tests/testUGeoNameMeshEntities.cxx' || echo '$(srcdir)/'`tests/testUGeoNameMeshEntities.cxx

testUGeoNameMeshEntities.obj: tests/testUGeoNameMeshEntities.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUGeoNameMeshEntities.obj -MD -MP -MF $(DEPDIR)/testUGeoNameMeshEntities.Tpo -c -o testUGeoNameMeshEntities.obj `if test -f 'tests/testUGeoNameMeshEntities.cxx'; then $(CYGPATH_W) 'tests/testUGeoNameMeshEntities.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUGeoNameMeshEntities.cxx'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUGeoNameMeshEntities.Tpo $(DEPDIR)/testUGeoNameMeshEntities.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUGeoNameMeshEntities.cxx' object='testUGeoNameMeshEntities.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUGeoNameMeshEntities.obj `if test -f 'tests/testUGeoNameMeshEntities.cxx'; then $(CYGPATH_W) 'tests/testUGeoNameMeshEntities.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUGeoNameMeshEntities.cxx'; fi`

testUMedException.o: tests/testUMedException.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUMedException.o -MD -MP -MF $(DEPDIR)/testUMedException.Tpo -c -o testUMedException.o `test -f 'tests/testUMedException.cxx' || echo '$(srcdir)/'`tests/testUMedException.cxx
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUMedException.Tpo $(DEPDIR)/testUMedException.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUMedException.cxx' object='testUMedException.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUMedException.o `test -f 'tests/testUMedException.cxx' || echo '$(srcdir)/'`tests/testUMedException.cxx

testUMedException.obj: tests/testUMedException.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUMedException.obj -MD -MP -MF $(DEPDIR)/testUMedException.Tpo -c -o testUMedException.obj `if test -f 'tests/testUMedException.cxx'; then $(CYGPATH_W) 'tests/testUMedException.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUMedException.cxx'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUMedException.Tpo $(DEPDIR)/testUMedException.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUMedException.cxx' object='testUMedException.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUMedException.obj `if test -f 'tests/testUMedException.cxx'; then $(CYGPATH_W) 'tests/testUMedException.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUMedException.cxx'; fi`

testUModulusArray.o: tests/testUModulusArray.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUModulusArray.o -MD -MP -MF $(DEPDIR)/testUModulusArray.Tpo -c -o testUModulusArray.o `test -f 'tests/testUModulusArray.cxx' || echo '$(srcdir)/'`tests/testUModulusArray.cxx
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUModulusArray.Tpo $(DEPDIR)/testUModulusArray.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUModulusArray.cxx' object='testUModulusArray.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUModulusArray.o `test -f 'tests/testUModulusArray.cxx' || echo '$(srcdir)/'`tests/testUModulusArray.cxx

testUModulusArray.obj: tests/testUModulusArray.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUModulusArray.obj -MD -MP -MF $(DEPDIR)/testUModulusArray.Tpo -c -o testUModulusArray.obj `if test -f 'tests/testUModulusArray.cxx'; then $(CYGPATH_W) 'tests/testUModulusArray.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUModulusArray.cxx'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUModulusArray.Tpo $(DEPDIR)/testUModulusArray.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUModulusArray.cxx' object='testUModulusArray.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUModulusArray.obj `if test -f 'tests/testUModulusArray.cxx'; then $(CYGPATH_W) 'tests/testUModulusArray.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUModulusArray.cxx'; fi`

testUPointerOf.o: tests/testUPointerOf.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUPointerOf.o -MD -MP -MF $(DEPDIR)/testUPointerOf.Tpo -c -o testUPointerOf.o `test -f 'tests/testUPointerOf.cxx' || echo '$(srcdir)/'`tests/testUPointerOf.cxx
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUPointerOf.Tpo $(DEPDIR)/testUPointerOf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUPointerOf.cxx' object='testUPointerOf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUPointerOf.o `test -f 'tests/testUPointerOf.cxx' || echo '$(srcdir)/'`tests/testUPointerOf.cxx

testUPointerOf.obj: tests/testUPointerOf.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUPointerOf.obj -MD -MP -MF $(DEPDIR)/testUPointerOf.Tpo -c -o testUPointerOf.obj `if test -f 'tests/testUPointerOf.cxx'; then $(CYGPATH_W) 'tests/testUPointerOf.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUPointerOf.cxx'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUPointerOf.Tpo $(DEPDIR)/testUPointerOf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUPointerOf.cxx' object='testUPointerOf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUPointerOf.obj `if test -f 'tests/testUPointerOf.cxx'; then $(CYGPATH_W) 'tests/testUPointerOf.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUPointerOf.cxx'; fi`

testUSkyLineArray.o: tests/testUSkyLineArray.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUSkyLineArray.o -MD -MP -MF $(DEPDIR)/testUSkyLineArray.Tpo -c -o testUSkyLineArray.o `test -f 'tests/testUSkyLineArray.cxx' || echo '$(srcdir)/'`tests/testUSkyLineArray.cxx
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUSkyLineArray.Tpo $(DEPDIR)/testUSkyLineArray.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUSkyLineArray.cxx' object='testUSkyLineArray.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUSkyLineArray.o `test -f 'tests/testUSkyLineArray.cxx' || echo '$(srcdir)/'`tests/testUSkyLineArray.cxx

testUSkyLineArray.obj: tests/testUSkyLineArray.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUSkyLineArray.obj -MD -MP -MF $(DEPDIR)/testUSkyLineArray.Tpo -c -o testUSkyLineArray.obj `if test -f 'tests/testUSkyLineArray.cxx'; then $(CYGPATH_W) 'tests/testUSkyLineArray.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUSkyLineArray.cxx'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUSkyLineArray.Tpo $(DEPDIR)/testUSkyLineArray.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUSkyLineArray.cxx' object='testUSkyLineArray.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUSkyLineArray.obj `if test -f 'tests/testUSkyLineArray.cxx'; then $(CYGPATH_W) 'tests/testUSkyLineArray.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUSkyLineArray.cxx'; fi`

testUUnit.o: tests/testUUnit.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUUnit.o -MD -MP -MF $(DEPDIR)/testUUnit.Tpo -c -o testUUnit.o `test -f 'tests/testUUnit.cxx' || echo '$(srcdir)/'`tests/testUUnit.cxx
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUUnit.Tpo $(DEPDIR)/testUUnit.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUUnit.cxx' object='testUUnit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUUnit.o `test -f 'tests/testUUnit.cxx' || echo '$(srcdir)/'`tests/testUUnit.cxx

testUUnit.obj: tests/testUUnit.cxx
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testUUnit.obj -MD -MP -MF $(DEPDIR)/testUUnit.Tpo -c -o testUUnit.obj `if test -f 'tests/testUUnit.cxx'; then $(CYGPATH_W) 'tests/testUUnit.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUUnit.cxx'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/testUUnit.Tpo $(DEPDIR)/testUUnit.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tests/testUUnit.cxx' object='testUUnit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testUUnit.obj `if test -f 'tests/testUUnit.cxx'; then $(CYGPATH_W) 'tests/testUUnit.cxx'; else $(CYGPATH_W) '$(srcdir)/tests/testUUnit.cxx'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS


# tests
tests: unittest

unittest: $(UNIT_TEST_PROG)
	@if test "x$(UNIT_TEST_PROG)" != "x"; then \
	    for exe in $(UNIT_TEST_PROG) ; do \
	        env top_srcdir=@top_srcdir@ top_builddir=@top_builddir@ ./$$exe; \
	        err=0; \
	        for f in `find -name "UnitTestsResult*"` XXX ; do \
	            if [[ $$f == XXX ]] ; then continue ; fi ; \
                    if [[ `awk '{ print $$1 }' $$f` != "OK" ]]; then \
	                cat $$f; \
	                err=1; \
	            fi; \
	        done; \
	        if [[ $$err == 1 ]] ; then \
	            exit 10; \
	        fi; \
	    done; \
	fi;

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
